name: Create builds
on:
  workflow_dispatch:

jobs:
  build-android:
    name: Build APK
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.27.1 # Must be the same with the one in pubspec.yaml

      - name: Configure Firebase
        run: |
          echo "${{ secrets.FIREBASE_OPTIONS }}" | base64 --decode > lib/firebase_options.dart
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json

      - name: Configure environment
        run: echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Download dependencies
        run: flutter pub get

      - name: Run build runner and generate localization files
        run: |
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter gen-l10n

      - name: Build Android
        run: flutter build apk --release --obfuscate --split-debug-info=build/app/outputs/symbols --build-number=${{ github.run_number }} --split-per-abi

      - name: Upload Android build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: build/app/outputs/flutter-apk/*.apk

      - name: Upload Android debug symbols
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-symbols
          path: build/app/outputs/symbols
          retention-days: 1

  build-ios:
    name: Build IPA
    runs-on: macos-latest
    permissions:
      contents: write
      packages: write
      actions: write
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.27.1 # Must be the same with the one in pubspec.yaml

      - name: Configure Firebase
        run: |
          echo "${{ secrets.FIREBASE_OPTIONS }}" | base64 --decode > lib/firebase_options.dart
          echo "${{ secrets.FIREBASE_APP_ID_FILE }}" | base64 --decode > ios/firebase_app_id_file.json
          echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}" | base64 --decode > ios/Runner/GoogleService-Info.plist

      - name: Configure environment
        run: echo "${{ secrets.ENVIRONMENT }}" | base64 --decode > .env

      - name: Download dependencies
        run: flutter pub get

      - name: Run build runner and generate localization files
        run: |
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter gen-l10n

      - name: Build iOS
        run: flutter build ios --release --no-codesign --obfuscate --split-debug-info=build/ios/outputs/symbols --build-number=${{ github.run_number }}

      - name: Create IPA
        run: |
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload
          zip -r app.ipa Payload

      - name: Upload iOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-artifacts
          path: build/ios/iphoneos/app.ipa

      - name: Upload iOS debug symbols
        uses: actions/upload-artifact@v4
        with:
          name: ios-debug-symbols
          path: build/ios/outputs/symbols
          retention-days: 1
